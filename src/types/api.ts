// let's imagine this file is autogenerated from the backend
// ideally, we want to keep these api related types in sync
// with the backend instead of manually writing them out

export type BaseEntity = {
  id: string;
  createdAt: number;
};

export type Entity<T> = {
  [K in keyof T]: T[K];
} & BaseEntity;

export type User = Entity<{
  firstName: string;
  lastName: string;
  email: string;
  role: RoleName;
  teamId: string;
  bio: string;
}>;

export type AuthResponse = {
  jwt: string;
  user: User;
};

export type Team = Entity<{
  name: string;
  description: string;
}>;

export type Discussion = Entity<{
  title: string;
  body: string;
  teamId: string;
  author: User;
}>;

export type Comment = Entity<{
  body: string;
  discussionId: string;
  author: User;
}>;

export type RoleResponse = {
  roles: Role[];
};

export type Role = {
  id: number;
  name: RoleName;
  description: string;
  createdAt: string;
  type: Lowercase<RoleName>;
  updatedAt: string;
  nb_users: number;
};

export type SingleRole = {
  id: number;
  name: RoleName;
  type: Lowercase<RoleName>;
  permissions: any;
  description: string;
  createdAt: string;
  updatedAt: string;
};

export type SingleRoleResponse = { role: SingleRole };

export type RoleName =
  | 'Authenticated'
  | 'Public'
  | 'Admin'
  | 'Cook'
  | 'Deliverer'
  | 'FieldWorker';

export enum RoleEnum {
  Authenticated = 1,
  Public = 2,
  Admin = 3,
  Cook = 4,
  Deliverer = 5,
  FieldWorker = 6,
}
